generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model categoria {
  idCategoria  Int            @id @default(autoincrement())
  Nombre       String         @db.VarChar(255)
  subcategoria subcategoria[]
}

model ciudad {
  idCiudad        Int          @id
  Nombre          String       @db.VarChar(100)
  id_Departamento Int
  createdAt       DateTime?    @db.DateTime(0)
  updatedAt       DateTime?    @db.DateTime(0)
  departamento    departamento @relation(fields: [id_Departamento], references: [idDepartamento], map: "ciudad_ibfk_1")
  usuario         usuario[]

  @@index([id_Departamento], map: "id_Departamento")
}

model compra {
  idCompra     Int          @id @default(autoincrement())
  Subtotal     Float
  Total        Float
  id_estado    Int
  id_usuario   Int
  idDescuento  Int
  usuario      usuario      @relation(fields: [id_usuario], references: [idUsuario], onDelete: Cascade, map: "compra_ibfk_1")
  estadocompra estadocompra @relation(fields: [id_estado], references: [IdEstado], onDelete: Cascade, map: "compra_ibfk_2")
  descuento    descuento    @relation(fields: [idDescuento], references: [idDescuento], onDelete: Cascade, map: "compra_ibfk_3")
  itemcompra   itemcompra[]

  @@index([id_estado], map: "id_estado")
  @@index([id_usuario], map: "id_user")
  @@index([idDescuento], map: "idDescuento")
}

model departamento {
  idDepartamento Int      @id
  Nombre         String   @db.VarChar(255)
  createdAt      DateTime @db.DateTime(0)
  updatedAt      DateTime @db.DateTime(0)
  ciudad         ciudad[]
}

model estadocompra {
  IdEstado Int      @id @default(autoincrement())
  Estado   Int      @db.TinyInt
  compra   compra[]
}

model imagenes {
  idImagen    Int      @id @default(autoincrement()) @db.UnsignedInt
  url         String   @db.VarChar(100)
  id_producto Int
  producto    producto @relation(fields: [id_producto], references: [idProducto], onDelete: Cascade, map: "imagenes_ibfk_1")

  @@index([id_producto], map: "id_producto")
}

model itemcompra {
  idItem      Int      @id @default(autoincrement())
  id_producto Int
  id_compra   Int
  cantidad    Int
  compra      compra   @relation(fields: [id_compra], references: [idCompra], onDelete: Cascade, map: "itemcompra_ibfk_1")
  producto    producto @relation(fields: [id_producto], references: [idProducto], onDelete: Cascade, map: "itemcompra_ibfk_2")

  @@index([id_producto], map: "id_producto")
  @@index([id_compra], map: "id_compra")
}

model marca {
  idMarca  Int        @id @default(autoincrement())
  Nombre   String     @db.VarChar(255)
  producto producto[]
}

model producto {
  idProducto      Int          @id @default(autoincrement())
  Nombre          String       @db.VarChar(255)
  Precio          Float
  Cantidad        Int
  id_marca        Int
  id_subcategoria Int
  marca           marca        @relation(fields: [id_marca], references: [idMarca], onDelete: Cascade, map: "producto_ibfk_1")
  subcategoria    subcategoria @relation(fields: [id_subcategoria], references: [idSubcategoria], onDelete: Cascade, map: "producto_ibfk_2")
  imagenes        imagenes[]
  itemcompra      itemcompra[]

  @@index([id_marca], map: "id_marca")
  @@index([id_subcategoria], map: "id_subcategoria")
}

model subcategoria {
  idSubcategoria Int        @id @default(autoincrement())
  Nombre         String     @db.VarChar(255)
  idCategoria    Int
  categoria      categoria  @relation(fields: [idCategoria], references: [idCategoria], onDelete: Cascade, map: "subcategoria_ibfk_1")
  producto       producto[]

  @@index([idCategoria], map: "idCategoria")
}

model usuario {
  idUsuario Int      @id @default(autoincrement())
  Nombre    String   @db.VarChar(50)
  Apellido  String   @db.VarChar(50)
  Cedula    String   @db.VarChar(10)
  Cel       String   @db.VarChar(10)
  Email     String   @unique(map: "email") @db.VarChar(50)
  Contra    String   @db.VarChar(100)
  Direccion String   @db.VarChar(60)
  Fecha_nac DateTime @default(now()) @db.Timestamp(0)
  id_ciudad Int
  ciudad    ciudad   @relation(fields: [id_ciudad], references: [idCiudad], onDelete: Cascade, map: "usuario_ibfk_1")
  compra    compra[]

  @@index([id_ciudad], map: "id_ciudad")
}

model descuento {
  idDescuento Int      @id @default(autoincrement())
  Codigo      String   @db.VarChar(15)
  Descuento   Int
  Estado      Int      @db.TinyInt
  compra      compra[]
}
